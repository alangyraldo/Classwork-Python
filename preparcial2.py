# -*- coding: utf-8 -*-
"""preparcial2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sdXqswSgF-SSzqH0oCVOCBWRs7xCbMAd
"""

#1
compras= ["leche", "pan"]
compras.append("huevos")# con append se agrega a la lista
print(compras)

#2
perfil_usuario = {
    "nombre": input("Introduce el nombre del usuario: "),
    "edad": int(input("Introduce la edad del usuario: "))}

nueva_edad = int(input("Introduce la nueva edad del usuario: "))# Actualizar la edad del usuario
perfil_usuario["edad"] = nueva_edad
perfil_usuario["ciudad"] = input("Introduce la ciudad del usuario: ")# Añadir la clave "ciudad"
print(perfil_usuario)

#3
coordenadas =(40.7128, -74.0060) # creamos la tupla
lat , long = coordenadas # lo desempaquetamos
print(lat, long)# se imprime

#4
temperaturas = [22.5, 24.0, 21.8, 25.1, 23.9, 22.7, 21.5]
prom= sum(temperaturas)/len(temperaturas) # se genera una variable para el promedio donde lleva la suma de las temperaturas y la longitud de ellas
print(prom)

#5
diccionario ={'hi':'hola','tomorrow':'mañana','yesterday':'ayer','yellow':'amarillo','smart':'inteligente', 'goodbye':'adios','thanks':'gracias','sorry':'lo siento'}


busqueda=input("digite la palabra que desea buscar en ingles").lower()# se realiza un imput para solicitar la palabra al ususario

if busqueda in diccionario:# se crea un if para la condicion, en este caso con un .get para buscar la pabara y verificar si se encuentra
    print(diccionario.get(busqueda))
else:
    print("la palabra no se encuentra en el diccionario")

#6
horario=(('matematicas','08:00am'),('fisica','10:00am'),('historia','12:00pm'))

#recorremoe el horarioy lo imprimimos cada clase
print('horariodeclases es:')
for materia, hora in horario:
  print(f"{materia} - {hora}")

#7
invitados_dia = ["Ana", "Luis", "Marta", "Pedro"]
invitados_noche = ["Luis", "Sofía", "Ana", "Juan"]

invitadostotal= list(set(invitados_dia + invitados_noche))# creamos una variable para poder unir las listas con set
print(invitadostotal)

#8
inventario = [
    {"nombre": "Laptop", "precio": 900, "stock": 15},{"nombre": "Teléfono", "precio": 500, "stock": 30},{"nombre": "Tablet", "precio": 250, "stock": 20},{"nombre": "Auriculares", "precio": 100, "stock": 50},
    {"nombre": "Cargador", "precio": 25, "stock": 100}]
producto_buscar = input("Introduce el nombre del producto: ").lower()# Pedir al usuario el nombre del producto a buscar
producto_encontrado = next((producto for producto in inventario if producto["nombre"].lower() == producto_buscar), None)# Buscar el producto en el inventario

if producto_encontrado:
    print(f"Producto encontrado: {producto_encontrado}")
else:
    print("Producto no encontrado.")

#9
estudiantes = {"Ana": 4.5, "Luis": 3.8, "Marta": 4.8, "Pedro": 3.9}

estudiantes["Pedro"] = 2.9# Actualizar la calificación de Pedro
print(estudiantes)

# 10
numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
pares = [numero for numero in numeros if numero % 2 == 0]# Crear una nueva lista con solo los números pares utilizando lista por comprensión
print(pares)

#11
estudiantes = [
    {"nombre": "Ana", "promedio": 4.5, "curso": "10A"},
    {"nombre": "Luis", "promedio": 3.8, "curso": "10B"},
    {"nombre": "Marta", "promedio": 4.8, "curso": "10A"},
    {"nombre": "Pedro", "promedio": 3.9, "curso": "10C"},
    {"nombre": "Sofía", "promedio": 4.2, "curso": "10B"}
]

buenprom= [estudiante["promedio"] for estudiante in estudiantes if estudiante["promedio"] >= 4.5]# se crea una variable para sacar el promedio de los estudiantes
print(buenprom)
nombres_estudiantes = [estudiante["nombre"] for estudiante in estudiantes]# se crea una variable para sacar el listado de el nombre  de los estudiantes
print(nombres_estudiantes)

#12
ventas = [
    ("Laptop", "Electrónica", 1500),
    ("Camisa", "Ropa", 80),
    ("Mouse", "Electrónica", 50),
    ("Pantalón", "Ropa", 120),
    ("Teclado", "Electrónica", 70)
]

# Diccionario para almacenar el total de ventas por categoría
total_ventas = {}

# Recorrer las ventas y sumar el monto a la categoría correspondiente
for producto, categoria, monto in ventas:
    if categoria in total_ventas:
        total_ventas[categoria] += monto  # Si la categoría ya existe, sumar el monto
    else:
        total_ventas[categoria] = monto  # Si la categoría no existe, crearla con el monto inicial

# Mostrar el total de ventas por categoría
print(total_ventas)

#13

libro = {
    "titulo": "Python para Todos",
    "año": 2024,
    "autores": [
        {"nombre": "Raúl", "nacionalidad": "Española"},
        {"nombre": "Laura", "nacionalidad": "Mexicana"}
    ],
    "editorial": "Ediciones Código"}
nombres_autores = [autor["nombre"] for autor in libro["autores"]]# Crear una lista con los nombres de los autore
print(nombres_autores)# Mostrar la lista de nombres de los autores

#14
# Diccionario de productos y precios
productos = {
    101: "Leche",
    102: "Pan",
    103: "Huevos"
}

precios = {
    101: 4500,
    102: 2500,
    103: 8000
}

ventas_del_dia = [
    (101, 5),  # Se vendieron 5 unidades de Leche
    (102, 10), # Se vendieron 10 unidades de Pan
    (101, 3),  # Se vendieron otras 3 unidades de Leche
    (103, 2)   # Se vendieron 2 unidades de Huevos
]
ingreso_total = 0


for id_producto, cantidad in ventas_del_dia:# Recorrer las ventas del día
    precio = precios[id_producto]# Obtener el precio del producto usando su ID
    ingreso_total += precio * cantidad# Calcular el ingreso de esa venta y sumarlo al total
print(f"Ingreso total del día: {ingreso_total}")